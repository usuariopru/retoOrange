buildscript {
    ext.serenityCoreVersion = "3.3.0"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:$serenityCoreVersion"
        classpath "net.serenity-bdd:serenity-single-page-report:$serenityCoreVersion"
    }
}

plugins {
    id "net.serenity-bdd.serenity-gradle-plugin" version "$serenityCoreVersion"
    id "java"
    id "idea"
}

defaultTasks 'clean','test','aggregate'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

group = 'retoOrange'
version = '1.0-SNAPSHOT'

compileJava.options.encoding="UTF-8"
compileTestJava.options.encoding="UTF-8"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    slf4Version = '1.7.7'
    serenityCoreVersion = '3.3.4'
    serenityCucumberVersion = '3.3.4'
    junitVersion = '5.8.2'
    assertJVersion ='3.22.0'
}

dependencies {
    testImplementation ("net.serenity-bdd:serenity-core:${serenityCoreVersion}"){
        exclude group: 'org.apache.groovy', module: 'groovy'
    }

    implementation "org.slf4j:slf4j-simple:${slf4Version}"
    implementation "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-junit5:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityCoreVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}"




    implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    implementation "org.assertj:assertj-core:${assertJVersion}"

}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

serenity {
    testRoot = "retoOrange.runners"
    requirementsBaseDir = "src/test/resources/features"
    reports = ["single-page-html"]
}

gradle.startParameter.continueOnFailure = true
test.finalizedBy(aggregate)